/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.BloodBank;

import Business.BloodBank.BloodBank;
import Business.BloodBank.BloodStock;
import Business.EcoSystem;
import Business.Enterprise.BloodBankEnterprise;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.BloodBankOrganization;
import Business.Organization.Organizations;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DonateBloodWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mansizope
 */
public class ManageDonateBloodRequest extends javax.swing.JPanel {

    UserAccount account;
    Organizations organization;
    Enterprise enterprise;
    EcoSystem ecosystem;

    /**
     * Creates new form ManageDonateBloodRequest
     */
    public ManageDonateBloodRequest(UserAccount account, Organizations organization, Enterprise enterprise, EcoSystem ecosystem) {
        initComponents();
        this.ecosystem = ecosystem;
        this.organization = organization;
        this.enterprise = enterprise;
        this.account = account;
        populateRequestTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        donorTrnTable = new javax.swing.JTable();
        btnApprove = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("MANAGE DONATION REQUEST");

        donorTrnTable.setBackground(new java.awt.Color(255, 204, 204));
        donorTrnTable.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        donorTrnTable.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        donorTrnTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "", "Name", "Age", "Weight", "Height", "Hemoglobin Level", "Blood Last Donated Date", "Blood Donation Date", "Number of Units", "Other Diseases", "Price", "Requested Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(donorTrnTable);
        if (donorTrnTable.getColumnModel().getColumnCount() > 0) {
            donorTrnTable.getColumnModel().getColumn(0).setMinWidth(1);
            donorTrnTable.getColumnModel().getColumn(0).setPreferredWidth(1);
            donorTrnTable.getColumnModel().getColumn(0).setMaxWidth(1);
        }

        btnApprove.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnApprove.setText("Action");
        btnApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApproveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(147, 147, 147)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 866, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnApprove, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(40, 40, 40)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnApprove)
                .addContainerGap(374, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApproveActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) donorTrnTable.getModel();
        int selectedRow = donorTrnTable.getSelectedRow();
        if(selectedRow!=-1){
        DonateBloodWorkRequest db = (DonateBloodWorkRequest) model.getValueAt(selectedRow, 0);
        if(db.getStatus().equals("Approved")){
                        JOptionPane.showMessageDialog(this, "Request already approved");
        }else{
            if (db.getDonorTransaction().getAge() > 16 && !db.getDonorTransaction().isOtherDiseases() && db.getDonorTransaction().getHblevel() >= 12.5) {
            db.getDonorTransaction().setIsEligible(true);
            db.setStatus("Approved");
            db.setResolveDate(new Date());
            db.setReceiver(account);


            BloodBank bloodBank = db.getDonorTransaction().getBloodbank();
            BloodStock bloodStock = bloodBank.getBloodStock().stream().filter(item -> db.getPerson().getBloodGroup().equals(item.getBloodGroup())).findFirst().orElse(null);
            int quant = 0;
            if (bloodStock == null) {
                quant += 1;
                bloodBank.getBloodStock().add(new BloodStock(db.getPerson().getBloodGroup(), quant));

            }else{
                quant = bloodStock.getQuantity() + 1;
                bloodStock.setQuantity(quant);
            }

            JOptionPane.showMessageDialog(this, "Thank you for donating the blood");

        } else {
            db.getDonorTransaction().setIsEligible(true);
            db.setStatus("Rejected");
            db.setResolveDate(new Date());
            db.setReceiver(account);
            JOptionPane.showMessageDialog(this, "You are not eligible for donation");

        }
        populateRequestTable();
        }
        
        }else{
                        JOptionPane.showMessageDialog(this, "Please select a record to approve the request");

        }
    }//GEN-LAST:event_btnApproveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApprove;
    private javax.swing.JTable donorTrnTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

    private void populateRequestTable() {
        DefaultTableModel model = (DefaultTableModel) donorTrnTable.getModel();
        model.setRowCount(0);
        for (Network n : this.ecosystem.getNetworkList()) {
            for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
                if (e instanceof BloodBankEnterprise) {
                    for (Organizations org : e.getOrganizationDirectory().getOrganizationList()) {
                        if (org instanceof BloodBankOrganization) {
                            DefaultTableModel modelR = (DefaultTableModel) donorTrnTable.getModel();
                            modelR.setRowCount(0);
                            for (WorkRequest request : org.getWorkQueue().getWorkRequestList()) {
                                if (request instanceof DonateBloodWorkRequest) {

                                    Object[] rowTrn = new Object[13];
                                    //row[0] = ++index;

                                    rowTrn[0] = request;
                                    rowTrn[1] = ((DonateBloodWorkRequest) request).getPerson().getName();
                                    rowTrn[2] = ((DonateBloodWorkRequest) request).getDonorTransaction().getAge();
                                    rowTrn[3] = ((DonateBloodWorkRequest) request).getDonorTransaction().getWeight();
                                    rowTrn[4] = ((DonateBloodWorkRequest) request).getDonorTransaction().getHeight();
                                    rowTrn[5] = ((DonateBloodWorkRequest) request).getDonorTransaction().getHblevel();
                                    rowTrn[6] = ((DonateBloodWorkRequest) request).getDonorTransaction().getBloodLastDonatedDate();
                                    rowTrn[7] = ((DonateBloodWorkRequest) request).getDonorTransaction().getBloodDonationDate();
                                    rowTrn[8] = ((DonateBloodWorkRequest) request).getDonorTransaction().getNumberOfUnits();
                                    rowTrn[9] = ((DonateBloodWorkRequest) request).getDonorTransaction().isOtherDiseases();
                                    rowTrn[10] = ((DonateBloodWorkRequest) request).getDonorTransaction().getPrice();
                                    rowTrn[11] = request.getRequestDate();
                                    rowTrn[12] = request.getStatus();
                                    modelR.addRow(rowTrn);
                                }
                            }
                            break;
                        }
                    }
                    break;
                }
            }
        }
    }
}
